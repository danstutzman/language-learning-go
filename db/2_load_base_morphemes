#!/bin/bash -ex

cd `dirname $0`/..

sqlite3 db/db.sqlite3 <<EOF
DROP TABLE IF EXISTS morphemes;
CREATE TABLE morphemes (
  id                INTEGER PRIMARY KEY NOT NULL,
  type              TEXT NOT NULL,
  l2                TEXT NOT NULL,
  lemma             TEXT, -- type=VERB_SUFFIX has no lemma
  freeling_tag      TEXT,
  verb_category     TEXT
);

INSERT INTO morphemes (type, l2, lemma, freeling_tag, verb_category)
  VALUES ('VERB_UNIQUE', 'estÃ¡', 'estar', 'VMIP3S0', NULL);
INSERT INTO morphemes (type, l2, lemma, freeling_tag, verb_category)
  VALUES ('VERB_UNIQUE', 'estoy', 'estar', 'VMIP1S0', NULL);
INSERT INTO morphemes (type, l2, lemma, freeling_tag, verb_category)
  VALUES ('VERB_UNIQUE', 'estoy', 'estar', 'VAIP1S0', NULL);
INSERT INTO morphemes (type, l2, lemma, freeling_tag, verb_category)
  VALUES ('VERB_UNIQUE', 'hay', 'haber', 'VMIP3S0', NULL);
INSERT INTO morphemes (type, l2, lemma, freeling_tag, verb_category)
  VALUES ('VERB_UNIQUE', 'voy', 'ir', 'VMIP1S0', NULL);
INSERT INTO morphemes (type, l2, lemma, freeling_tag, verb_category)
  VALUES ('VERB_UNIQUE', 'va', 'ir', 'VMIP3S0', NULL);
INSERT INTO morphemes (type, l2, lemma, freeling_tag, verb_category)
  VALUES ('VERB_UNIQUE', 'soy', 'ser', 'VSIP1S0', NULL);
INSERT INTO morphemes (type, l2, lemma, freeling_tag, verb_category)
  VALUES ('VERB_UNIQUE', 'soy', 'ser', 'VSIP1S0', NULL);
INSERT INTO morphemes (type, l2, lemma, freeling_tag, verb_category)
  VALUES ('VERB_UNIQUE', 'somos', 'ser', 'VSIP1P0', NULL);
INSERT INTO morphemes (type, l2, lemma, freeling_tag, verb_category)
  VALUES ('VERB_UNIQUE', 'eres', 'ser', 'VSIP2S0', NULL);
INSERT INTO morphemes (type, l2, lemma, freeling_tag, verb_category)
  VALUES ('VERB_UNIQUE', 'es', 'ser', 'VSIP3S0', NULL);
INSERT INTO morphemes (type, l2, lemma, freeling_tag, verb_category)
  VALUES ('VERB_UNIQUE', 'son', 'ser', 'VSIP3P0', NULL);
INSERT INTO morphemes (type, l2, lemma, freeling_tag, verb_category)
  VALUES ('VERB_UNIQUE', 'tengo', 'tener', 'VMIP1S0', NULL);

EOF

ruby scripts/extract_stem_changes.rb | sqlite3 db/db.sqlite3
