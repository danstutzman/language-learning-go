package main

import (
	"bitbucket.org/danstutzman/language-learning-go/internal/parsing"
	"log"
)

type ParallelNoun struct {
	l2 string
	l1 string
}

var parallelNouns = []ParallelNoun{
	{"Australia", "Australia"},
	{"Beatriz", "Beatrice"},
	{"Beijing", "Beijing"},
	{"Bertrand", "Bertrand"},
	{"Bienvenida", "Welcome"},
	{"Bienvenidas", "Welcome"},
	{"Bienvenido", "welcome"},
	{"Bienvenidos", "Welcome"},
	{"Brasil", "Brazil"},
	{"Carlos", "Charles"},
	{"Chicago", "Chicago"},
	{"China", "China"},
	{"Colombia", "Colombia"},
	{"Desayuno", "Breakfast"},
	{"Egipto", "Egypt"},
	{"Endantada", "Grounded"},
	{"Enrique", "Enrique"},
	{"Estados_Unidos", "U.S"},
	{"Estudio", "study"},
	{"Francia", "France"},
	{"Fresno", "ash tree"},
	{"Gracias", "Thank you"},
	{"Hablas", "Speak"},
	{"Italia", "Italy"},
	{"Japón", "Japan"},
	{"Juan", "Juan"},
	{"Juego", "Game"},
	{"Julia", "Julia"},
	{"Kimberly", "Kimberly"},
	{"Leo", "Leo"},
	{"Lyn", "Lyn"},
	{"Mamá", "Mom"},
	{"Mei", "Mei"},
	{"Moscú", "Moscow"},
	{"Nuetros", "Our"},
	{"Nueva_York", "NY"},
	{"Olga", "Olga"},
	{"Pago", "Payment"},
	{"Papá", "Dad"},
	{"París", "Paris"},
	{"Perdón", "Sorry"},
	{"Pino", "Pine tree"},
	{"Roma", "Rome"},
	{"Rusia", "Russia"},
	{"Sara", "Sara"},
	{"Señor_Haddad", "Lord_Haddad"},
	{"Señora_Li", "Lady_Li"},
	{"Señora_Serrano", "Mrs._Serrano"},
	{"Trabajo", "Job"},
	{"Viktor", "Viktor"},
	{"abrigo", "coat"},
	{"abuela", "grandmother"},
	{"abuelo", "grandfather"},
	{"agua", "Water"},
	{"almohada", "pillow"},
	{"alumna", "student"},
	{"amiga", "friend"},
	{"amigas", "friends"},
	{"amigo", "friend"},
	{"amigos", "friends"},
	{"animal", "animal"},
	{"animales", "animals"},
	{"anteojos", "glasses"},
	{"apartamento", "apartment"},
	{"arroz", "rice"},
	{"azul", "blue"},
	{"año", "year"},
	{"años", "years"},
	{"baño", "bathroom"},
	{"bebé", "baby"},
	{"bici", "bike"},
	{"blanco", "White"},
	{"bolígrafos", "pens"},
	{"caballo", "horse"},
	{"caballos", "horses"},
	{"café", "coffee"},
	{"calcetines", "socks"},
	{"calle", "Street"},
	{"calor", "heat"},
	{"cama", "bed"},
	{"camisa", "shirt"},
	{"camisas", "shirts"},
	{"camiseta", "T-shirt"},
	{"camisetas", "Tshirts"},
	{"cantidad", "quantity"},
	{"cara", "face"},
	{"carne", "meat"},
	{"carro", "car"},
	{"carros", "cars"},
	{"casa", "House"},
	{"cepillo", "brush"},
	{"cheque", "check"},
	{"cheques", "checks"},
	{"chino", "Chinese"},
	{"chocolate", "chocolate"},
	{"cine", "movie theater"},
	{"cinturones", "belts"},
	{"cinturón", "belt"},
	{"ciudad", "city"},
	{"cocina", "kitchen"},
	{"color", "color"},
	{"colores", "colors"},
	{"comedor", "dinning room"},
	{"compras", "shopping"},
	{"computadora", "computer"},
	{"concierto", "concert"},
	{"corbata", "tie"},
	{"corbatas", "ties"},
	{"crédito", "credit"},
	{"cuartro", "room"},
	{"cumpleaños", "birthday"},
	{"cámara", "camera"},
	{"dedo", "finger"},
	{"dedos", "fingers"},
	{"dentífrico", "Toothpaste"},
	{"dientes", "teeth"},
	{"dinero", "money"},
	{"doctora", "doctor"},
	{"dormitorio", "bedroom"},
	{"débito", "debit"},
	{"día", "day"},
	{"días", "days"},
	{"dólar", "dollar"},
	{"efectivo", "cash"},
	{"enferma", "sick"},
	{"entrada", "entry"},
	{"escalera", "stairs"},
	{"escuela", "school"},
	{"esculera", "squire"},
	{"español", "Spanish"},
	{"esposa", "wife"},
	{"esposo", "husband"},
	{"estudio", "study"},
	{"falda", "skirt"},
	{"familia", "family"},
	{"farmacia", "pharmacy"},
	{"ferretería", "hardware store"},
	{"flor", "flower"},
	{"flores", "flowers"},
	{"frazada", "blanket"},
	{"fruta", "fruit"},
	{"frío", "cold"},
	{"fútbol", "football"},
	{"gafas", "glasses"},
	{"gato", "cat"},
	{"gatos", "cats"},
	{"golf", "golf"},
	{"gracias", "thanks"},
	{"hambre", "hunger"},
	{"hermana", "sister"},
	{"hermanas", "sisters"},
	{"hermano", "brother"},
	{"hermanos", "siblings"},
	{"hija", "daughter"},
	{"hijo", "son"},
	{"hijos", "sons"},
	{"hombre", "man"},
	{"hombres", "mens"},
	{"hospital", "hospital"},
	{"hotel", "hotel"},
	{"huevo", "egg"},
	{"huevos", "eggs"},
	{"huésped", "Guest"},
	{"huéspedes", "guests"},
	{"ingles", "English"},
	{"inglés", "English"},
	{"invierno", "winter"},
	{"invitado", "invited"},
	{"invitados", "guests"},
	{"is", "is"},
	{"jabón", "soap"},
	{"jeans", "jeans"},
	{"joyas", "jewelry"},
	{"joyería", "jewelry"},
	{"juego", "game"},
	{"jugo", "juice"},
	{"juguete", "toy"},
	{"juguetería", "toy store"},
	{"juguetes", "toys"},
	{"laptop", "laptop"},
	{"leche", "milk"},
	{"librería", "library"},
	{"libro", "book"},
	{"libros", "books"},
	{"llamas", "calls"},
	{"llaves", "keys"},
	{"madera", "wood"},
	{"maestra", "teacher"},
	{"maestro", "teacher"},
	{"mamá", "mom"},
	{"mano", "hand"},
	{"manos", "hands"},
	{"manzana", "Apple"},
	{"manzanas", "apples"},
	{"mañana", "tomorrow"},
	{"medicina", "medicine"},
	{"mes", "month"},
	{"mesa", "table"},
	{"meses", "months"},
	{"metal", "metal"},
	{"moneda", "currency"},
	{"monedas", "coins"},
	{"morado", "purple"},
	{"muchacha", "girl"},
	{"muchachas", "Girls"},
	{"muchachos", "boys"},
	{"mujer", "woman"},
	{"mujeres", "women"},
	{"médico", "doctor"},
	{"música", "music"},
	{"naranja", "orange"},
	{"naranjas", "oranges"},
	{"niña", "little girl"},
	{"niñas", "girls"},
	{"niño", "boy"},
	{"niños", "children"},
	{"noche", "night"},
	{"noches", "nights"},
	{"obra", "work"},
	{"otoño", "fall"},
	{"padres", "parents"},
	{"pan", "bread"},
	{"panadería", "bakery"},
	{"pantalones", "pants"},
	{"papel", "paper"},
	{"papà", "father"},
	{"papá", "dad"},
	{"papás", "potato"},
	{"parada", "stop"},
	{"paraguas", "umbrella"},
	{"parque", "Park"},
	{"pasto", "grass"},
	{"país", "country"},
	{"pelo", "hair"},
	{"pelota", "ball"},
	{"pelotas", "balls"},
	{"película", "movie"},
	{"periódico", "Newspaper"},
	{"periódicos", "newspapers"},
	{"perro", "dog"},
	{"perros", "dogs"},
	{"persona", "person"},
	{"personas", "people"},
	{"pescado", "fish"},
	{"pez", "fish"},
	{"pie", "foot"},
	{"planta", "plant"},
	{"plato", "plate"},
	{"platos", "dishes"},
	{"plástico", "plastic"},
	{"policía", "police"},
	{"primavera", "spring"},
	{"puente", "bridge"},
	{"puerta", "door"},
	{"radio", "radio"},
	{"restaurante", "restaurant"},
	{"rojo", "Red"},
	{"ropa", "clothes"},
	{"rosada", "pink"},
	{"rota", "broken"},
	{"sala", "room"},
	{"sandwich", "sandwich"},
	{"sandwiches", "sandwiches"},
	{"sed", "thirst"},
	{"semana", "week"},
	{"semanas", "weeks"},
	{"silla", "chair"},
	{"sillas", "chairs"},
	{"sol", "Sun"},
	{"sombrero", "hat"},
	{"sombreros", "hats"},
	{"supermercado", "Supermarket"},
	{"suéter", "sweater"},
	{"sábana", "bed sheet"},
	{"sándwich", "sandwich"},
	{"tamaño", "size"},
	{"tamaños", "sizes"},
	{"tarde", "late"},
	{"tardes", "afternoons"},
	{"tarjeta", "card"},
	{"tarjetas", "cards"},
	{"taza", "Cup"},
	{"tazas", "cups"},
	{"tazones", "bowls"},
	{"tazón", "Bowl"},
	{"teatro", "theater"},
	{"tele", "TV"},
	{"teléfono", "phone"},
	{"teléfonos", "phones"},
	{"tenis", "tennis"},
	{"tienda", "store"},
	{"toalla", "towel"},
	{"toallas", "towels"},
	{"torta", "cake"},
	{"tortas", "cakes"},
	{"traje", "suit"},
	{"té", "tea"},
	{"usted", "your grace"},
	{"vaso", "glass"},
	{"ventana", "window"},
	{"verano", "summer"},
	{"verduras", "vegetables"},
	{"vestido", "dress"},
	{"zanahoria", "carrot"},
	{"zanahorias", "carrots"},
	{"zapato", "shoe"},
	{"zapatos", "shoes"},
	{"árabe", "Arab"},
	{"árbol", "tree"},
}

var parallelNounByL2 = buildParallelNounByL2()

func buildParallelNounByL2() map[string]ParallelNoun {
	parallelNounByL2 := map[string]ParallelNoun{}
	for _, parallelNoun := range parallelNouns {
		parallelNounByL2[parallelNoun.l2] = parallelNoun
	}
	return parallelNounByL2
}

func buildCommandsForNounPhrase(dependency parsing.Dependency,
	tokenById map[string]parsing.Token) []string {
	commands := []string{}

	token := tokenById[dependency.Token]
	parallelNoun := parallelNounByL2[token.Lemma]
	if parallelNoun.l2 == "" {
		log.Panicf("Can't find parallelNoun for l2=%s", token.Lemma)
	}

	commands = append(commands,
		"ADD/NOUN/"+parallelNoun.l2+"/"+parallelNoun.l1)

	for _, child := range dependency.Children {
		if child.Function == "spec" {
			commands = append(commands, buildCommandsForDet(child, tokenById)...)
			commands = append(commands, "MAKE_DET_NOUN_PHRASE")
		} else if child.Function == "s.a" {
			commands = append(commands, buildCommandsForAdj(child, tokenById)...)
			commands = append(commands, "MAKE_NOUN_PHRASE_ADJ")
		}
	}

	return commands
}
